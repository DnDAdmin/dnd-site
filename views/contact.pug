extends layout

block head
  title= title + 'Contact Form'

block content
  div(class='row mt-2 mt-md-5')
    div(class='col-12 p-0 col-md-8 mx-auto')
      if success 
        div#formMessage(class='success mb-2')
            h4 Success! 
            p Your message has been sent!
      else
        div#formMessage(class='mb-2')
            h4
            ul
      div(class='siteCont')
        h1(class='headingText text-center') Contact Form
        hr
        p(class='text-right')
            span(style='color: red;') *
            |  = required
        form#form(class='formMain mx-auto' action='/forms/contact'  method='post' enctype="multipart/form-data" onsubmit='sendMessage(event); return false')
          div(class='formItem')
            p(class='formLabel') Your Name:
              span  *
            input#name(class='formTextInput' type='text' data-req='true' name='name' placeholder='ext. John Doe' data-contact=true tabindex='1')
          
          div(class='formItem')
            p(class='formLabel') Your Email:
              span  *
            input#email(class='formTextInput' type='text' data-req='true' name='email' data-contact=true placeholder='ext. johndoe@site.com' tabindex='2')
          
          div(class='formItem')
            p(class='formLabel') Message:
              span  *
            div#editor-container(data-name='details' data-placeHolder='Say what you need to say.' data-tab=3 class='richEdit')
            input#details(style='display: none;' data-req='true' type='text' name='details')
          
          //- A lot of spam comes through the contact form, in an attempt to elimate that I created this human checker.
          //- The idea behind it is that the bots that go through the site are likely searching for input tags, if it finds a check box it checks it.
          //-   This button is a div that immitates a check box, so bots shouldn't notice it.
          //-   But if it doesn't have the "human" class the form will not submit.
          div(class='formItem')
            p(class='formLabel') I Am Human:
              span  *
            div#human(class='human-check' onclick='toggleHuman(this)')
            script.
              function toggleHuman(but) {
                but.classList.toggle('human')
              }
          
          div(class='formItem text-right my-4')
            button#formButton(class='buttonMain button great col-12 col-md-4')
              div(class='buttonText mx-2')
                p Submit
    
      div
        ul#errorText(class='w-100 px-3 mt-2 mx-auto errorText' style='display: none;')


  
  script.
    document.getElementById('form').addEventListener('submit', async (event) => {
      event.preventDefault()

      const formMessage = document.getElementById('formMessage')
      const human = document.getElementById('human')

      await updateInput()

      let errors = await checkForErrors() || []

      if(human.classList.contains('human')) {
        human.parentNode.classList.remove('error')
      } else {
        errors.push('Please verify your humanity.')
        human.parentNode.classList.add('error')
      }

      if(errors.length > 0) {
        formMessage.children[1].innerHTML = ''
        formMessage.classList.add('error')
        formMessage.children[0].innerHTML = 'Oops...'
        for(var i = 0; i< errors.length; i ++) {
            err = errors[i]
            var li = document.createElement('LI')
            li.innerHTML = err
            formMessage.children[1].appendChild(li)
        }
        window.scrollTo(0, 0);
      } else {
        document.getElementById('form').submit()
      }
    })



    //- async function sendMessage(event) {
    //-   event.preventDefault()
    //-   await updateInput()

    //-   const formMessage = document.getElementById('formMessage')
    //-   const human = document.getElementById('human')
      
    //-   let errors = await checkForErrors() || []
      
    //-   if(errors.length < 0) {
    //-     alert()
    //-   }

    //-   //- if(human.checked) {
    //-   //-   errors.push('Please verify your humanity.')
    //-   //-   human.parentNode.classList.add('error')
    //-   //- } else {
    //-   //-   human.parentNode.classList.remove('error')
    //-   //- }

    //-   //- if(errors.length > 0) {
    //-   //-   formMessage.children[1].innerHTML = ''
    //-   //-   formMessage.classList.add('error')
    //-   //-   formMessage.children[0].innerHTML = 'Oops...'
    //-   //-   for(var i = 0; i< errors.length; i ++) {
    //-   //-       err = errors[i]
    //-   //-       var li = document.createElement('LI')
    //-   //-       li.innerHTML = err
    //-   //-       formMessage.children[1].appendChild(li)
    //-   //-   }
    //-   //-   window.scrollTo(0, 0);
    //-   //- } else {
    //-   //-   document.getElementById('form').submit()
    //-   //- }
    //- }


